name: Check k3s Updates

on:
  schedule:
    # Run on the 1st of every month at 00:00 UTC
    - cron: '0 0 1 * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  check-k3s-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Get latest k3s version
        id: latest_version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/k3s-io/k3s/releases/latest | grep '"tag_name"' | cut -d'"' -f4)
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "Latest k3s version: $LATEST_VERSION"

      - name: Get current k3s version
        id: current_version
        run: |
          CURRENT_VERSION=$(grep "k3s_version:" group_vars/all.yml | cut -d'"' -f2)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current k3s version: $CURRENT_VERSION"

      - name: Check if update is needed
        id: check_update
        run: |
          if [ "${{ steps.latest_version.outputs.latest_version }}" != "${{ steps.current_version.outputs.current_version }}" ]; then
            echo "update_needed=true" >> $GITHUB_OUTPUT
            echo "Update needed: ${{ steps.current_version.outputs.current_version }} -> ${{ steps.latest_version.outputs.latest_version }}"
          else
            echo "update_needed=false" >> $GITHUB_OUTPUT
            echo "No update needed. Current version is up to date."
          fi

      - name: Log version information
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          echo "Current version: ${{ steps.current_version.outputs.current_version }}"
          echo "Latest version: ${{ steps.latest_version.outputs.latest_version }}"
          echo "Update needed: ${{ steps.current_version.outputs.current_version }} â†’ ${{ steps.latest_version.outputs.latest_version }}"

      - name: Create Issue for k3s Update
        if: steps.check_update.outputs.update_needed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Update k3s version to ${{ steps.latest_version.outputs.latest_version }}`,
              body: `## k3s Version Update Available
            
            A new k3s version is available for update.
            
            **Current version**: ${{ steps.current_version.outputs.current_version }}
            **Latest version**: ${{ steps.latest_version.outputs.latest_version }}
            
            ### Manual Update Required
            
            Please update the following files manually:
            
            1. **group_vars/all.yml**:
               \`\`\`yaml
               k3s_version: "${{ steps.latest_version.outputs.latest_version }}"
               \`\`\`
            
            2. **README.md**: Update the version badge and any version references
            
            ### Testing
            After updating, test the deployment with the new k3s version.
            
            ### Release Notes
            Check the [k3s release notes](https://github.com/k3s-io/k3s/releases/tag/${{ steps.latest_version.outputs.latest_version }}) for any breaking changes.
            
            ---
            *This issue was automatically created by the k3s version check workflow.*`,
              labels: ['k3s-update', 'automated', 'dependencies']
            });
            console.log(`Created issue #${issue.data.number}`);

      - name: Comment on PR if no update needed
        if: steps.check_update.outputs.update_needed == 'false'
        run: |
          echo "No k3s update needed. Current version ${{ steps.current_version.outputs.current_version }} is up to date." 