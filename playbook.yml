---
- name: Deploy k3s cluster on Multipass
  hosts: localhost
  gather_facts: false
  vars_files:
    - group_vars/all.yml
  vars:
    playbook_mode: "{{ playbook_mode | default('deploy') }}"
  
  tasks:
    - name: Check prerequisites
      block:
        - name: Check if multipass is available
          command: which multipass
          register: multipass_check
          changed_when: false
          failed_when: multipass_check.rc != 0
        
        - name: Check if ansible is available
          command: which ansible
          register: ansible_check
          changed_when: false
          failed_when: ansible_check.rc != 0
        
        - name: Display prerequisites status
          debug:
            msg: "Prerequisites check passed"
          when: multipass_check.rc == 0 and ansible_check.rc == 0

    - name: Include multipass role
      include_role:
        name: multipass
      tags: 
        - deploy
        - multipass

    - name: Include k3s role
      include_role:
        name: k3s
      tags:
        - deploy
        - k3s

- name: Destroy k3s cluster
  hosts: localhost
  gather_facts: false
  vars_files:
    - group_vars/all.yml
  
  tasks:
    - name: Include multipass destroy role
      include_role:
        name: multipass
        tasks_from: destroy
      tags:
        - destroy
        - multipass

- name: Display cluster information
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Wait for cluster to be ready
      pause:
        seconds: 30
      tags:
        - deploy

    - name: Get cluster status
      block:
        - name: Get kubeconfig from master
          command: snap run multipass exec k3s-master -- sudo cat /etc/rancher/k3s/k3s.yaml
          register: kubeconfig
          changed_when: false
          tags:
            - deploy
            - info

        - name: Save kubeconfig locally
          copy:
            content: "{{ kubeconfig.stdout }}"
            dest: "kubeconfig"
            mode: '0600'

        - name: Update kubeconfig server address
          replace:
            path: kubeconfig
            regexp: 'server: https://127.0.0.1:6443'
            replace: 'server: https://10.82.44.102:6443'
          tags:
            - deploy
            - info

        - name: Display cluster information
          debug:
            msg: |
              K3s cluster deployed successfully!
              
              Cluster Information:
              - Master Node: k3s-master
              - Worker Nodes: {{ groups['k3s_workers'] | default([]) }}
              - Kubeconfig saved to: ./kubeconfig
              
              Next steps:
              1. Use kubectl with the config: kubectl --kubeconfig kubeconfig get nodes
              2. Access the master: snap run multipass shell k3s-master
              3. To destroy: ansible-playbook -i inventory/single-node.yml playbook.yml --tags destroy
          tags:
            - deploy
            - info
