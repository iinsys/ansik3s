---
- name: Install k3s on master node
  block:
    - name: Download and install k3s on master
      command: >
        multipass exec k3s-master -- 
        curl -sfL https://get.k3s.io | 
        INSTALL_K3S_VERSION={{ k3s_version }} 
        INSTALL_K3S_EXEC="--node-ip={{ master_ip }} --flannel-iface=eth0" 
        sh -
      register: k3s_install
      retries: 3
      delay: 10
      until: k3s_install.rc == 0

    - name: Wait for k3s to be ready on master
      command: multipass exec k3s-master -- sudo k3s kubectl get nodes
      register: k3s_ready
      retries: 10
      delay: 30
      until: k3s_ready.rc == 0

    - name: Get k3s token from master
      command: multipass exec k3s-master -- sudo cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token_output
      changed_when: false

    - name: Set k3s token fact
      set_fact:
        k3s_token: "{{ k3s_token_output.stdout }}"

  tags:
    - deploy
    - k3s

- name: Install k3s on worker nodes
  block:
    - name: Download and install k3s on worker {{ item }}
      command: >
        multipass exec {{ item }} -- 
        curl -sfL https://get.k3s.io | 
        K3S_URL=https://{{ master_ip }}:6443 
        K3S_TOKEN={{ k3s_token }} 
        INSTALL_K3S_VERSION={{ k3s_version }}
        INSTALL_K3S_EXEC="--node-ip={{ hostvars[item].vm_ip }} --flannel-iface=eth0" 
        sh -
      register: k3s_worker_install
      retries: 3
      delay: 10
      until: k3s_worker_install.rc == 0

    - name: Wait for worker {{ item }} to join cluster
      command: multipass exec k3s-master -- sudo k3s kubectl get nodes
      register: worker_joined
      retries: 15
      delay: 20
      until: "'{{ item }}' in worker_joined.stdout"

  when: cluster_type == "multi-node"
  loop: "{{ groups['k3s_workers'] }}"
  tags:
    - deploy
    - k3s

- name: Configure kubectl access
  block:
    - name: Get kubeconfig from master
      command: multipass exec k3s-master -- sudo cat /etc/rancher/k3s/k3s.yaml
      register: kubeconfig_content
      changed_when: false

    - name: Update kubeconfig with correct server address
      replace:
        path: kubeconfig
        regexp: 'server: https://127.0.0.1:6443'
        replace: 'server: https://{{ master_ip }}:6443'
      when: cluster_type == "multi-node"

  tags:
    - deploy
    - k3s

- name: Verify cluster status
  block:
    - name: Check cluster nodes
      command: multipass exec k3s-master -- sudo k3s kubectl get nodes -o wide
      register: cluster_nodes
      changed_when: false

    - name: Check cluster pods
      command: multipass exec k3s-master -- sudo k3s kubectl get pods --all-namespaces
      register: cluster_pods
      changed_when: false

    - name: Display cluster status
      debug:
        msg: |
          K3s Cluster Status:
          
          Nodes:
          {{ cluster_nodes.stdout }}
          
          Pods:
          {{ cluster_pods.stdout }}

  tags:
    - deploy
    - k3s
    - info
